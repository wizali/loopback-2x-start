{"version":3,"sources":["phoebe.library.js","phoebe.lib.directive.js","chosen/chosen.js","chosen/phoebe.library.chosen.js","pagination/phoebe.lib.pagination.js"],"names":["window","angular","dependencies","module","moduleName","e","directive","restrict","scope","cancelfun","clearfun","submitfun","beforeopen","closefun","template","replace","transclude","link","iElement","iAttrs","resize","attrs","pHeight","widgetId","id","screenHeight","$","height","contengHeight","css","max-height","overflow-y","overflow-x","btns","hasOwnProperty","push","text","class","click","this","dialog","addClass","on","f","undefined","target","removeClass","modal","title","width","title_html","buttons","model","optionStr","i","delBtnStr","container","find","formStr","children","eq","html","append","delegate","confirm","closest","remove","console","log","plusBtn","delBtn","delTemplate","plusTemplate","appendTo","forEach","o","datepicker","autoclose","format","next","prev","focus","val","parent","hide","attr","UI","groupName","substr","toUpperCase","arr","div","$div","state","c","count","length","trigger","index","$subForm","k","change","name","group","value","msg","selected","checked","$parent","el","caption","bind","checkboxes","$o","v","getCheckboxSelected","element","that","each","toggleClass","houses","house","hideWidget","item","role","startEl","endEl","$$","end","start","tips","newDate","Date","ny","getFullYear","nm","getMonth","nd","getDate","today","data","compile","pre","parseJSON","_html","d","key","post","getValue","setValue","clear","setSelected","$el","s","checkbox","PhoebeResource","buildAttrbutes","str","$attr","split","buildWidget","type","tElement","tAttr","dataSource","options","pop","dataSourceModuleName","sourceModel","loadCondition","loadMethod","$watch","nv","ov","success","error","PhoebeDict","sortByKey","l","j","x","buildHTML","grids","cnName","enName","initialize","modelName","fillInOptions","copy","$$el","dateFormat","dictName","dicts","preload","getDict","dictoptions","foreignModel","foreighModel","optionsName","foreignSearchStr","query","getValues","setValues","obj","controllers","newVal","oldVal","FileReader","legal","file","maxSize","size","allow","allowed","indexOf","$apply","files","fileReader","onloadend","content","result","time","lastModifiedDate","year","mon","day","updateTime","readAsText","ContextMunu","config","treeId","menuId","munus","menu","buildContextMenu","prototype","addBtn","editBtn","node","menuArr","menus","kendoContextMenu","filter","select","contextMenuHander","call","button","operType","treeView","selectedItem","dataItem","params","t","n","addfun","editfun","delfun","selectfun","datasource","showField","showfield","idField","foreignKey","rootLevel","rootlevel","toKendoTreeData","kendoTreeView","loadOnDemand","dataTextField","expand","showlist","include","input","searchKye","UL","event","oneSearchKye","searchSubmit","inputValue","like","field","listName","$model","tablename","init","getSelected","els","preventDefault","$$this","hasClass","trs","tr","default","valuefidle","labelfidle","changed","returnObject","vals","option","chosen","ngModel","selectors","selectors_arr","selector","linkage","newValue","oldValue","pagination","items","initPagination","itemsPerPage","itemCount","currentPage","active","reloadTable","getItemCount","getPageCount","Math","ceil","setItemsPerPage","setPage","range","pageCount","firstPage","lastPage","prevPage","prevPageDisabled","nextPage","nextPageDisabled","limitSize","ev","parseInt","reader","onload","readAsDataURL","valParser","fullsize","widthVal","parentElement","fullSize","outerWidth","outerHeight","_props","classes","cols","_htmlInner","th","inner","phoDate","to","endDate","form","startDate","datetimepicker","date","month","cxCalendar","getTime","extend","style","styleSheet","animate","opacity","DEFAULT_ID","err","$compile","$parse","paginationService","terminal","multiElement","priority","tAttrs","expression","dirPaginate","match","filterPattern","itemsPerPageFilterRemoved","collectionGetter","rawId","paginationId","registerInstance","repeatExpression","idDefinedInFilter","hasAttribute","$set","currentPageGetter","compiled","defaultCurrentPage","setCurrentPageParser","totalItems","setAsyncModeTrue","setCollectionLength","$watchCollection","collection","generatePagesArray","collectionLength","rowsPerPage","paginationRange","position","pages","totalPages","halfWay","ellipsesNeeded","pageNumber","calculatePageNumber","openingEllipsesNeeded","closingEllipsesNeeded","numberRegex","onpagechange","goToPage","num","isValidPageNumber","getCollectionLength","getItemsPerPage","current","updateRangeValues","$resoure","page","rows","generatePagination","getCurrentPage","last","setCurrent","lower","upper","min","total","test","isRegistered","idMessage","directionLinks","isDefined","$eval","boundaryLinks","max","previous","previousPage","setCurrentPage","Array","isAsyncMode","slice","service","lastRegisteredInstance","instances","instanceId","asyncMode","getLastInstanceId","currentPageParser","context","assign","parser","provider","templatePath","setPath","path","$get","getPath"],"mappings":"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","file":"phoebe.library.min.js","sourcesContent":["/**\n * Created by felix on 11/13/14.\n */\n(function (window, angular, undefined) {\n\n    'use strict';\n\n    var dependencies = [\n        'phoebe.library.chosen',\n    \t'phoebe.library.pagination',\n    \t'phoebe.library.directive'\n    ];\n\n    angular.module('phoebe.library', dependencies);\n\n\n})(window, window.angular);\n","/* =========================================================\n * angular-directive.js\n *\n * 项目专用指令库\n * 基于anjularjs、jquery、ace1.3、bootstrap3.1.1\n * 开发原则：\n * 1、如果用到控件交互（取值、赋值、初始化、刷新），利用$scope.UI命名空间；\n * ========================================================= */\n/*\n *2015-01-21\n *author : wizaliu\n *description : 弹出框指令，向某个按钮或元素上绑定一个弹出框事件，当元素被点击以后，弹出框弹出\n * 提供cancelfun、clearfun、submitfun、beforeopen四个自定义方法，分别用于“取消”、“清空”、“提交”和打开窗口以前的处理\n * 如果添加了beforeopen方法，则必须返回一个boolean值，如果返回true，则显示弹出框，如果返回false则不显示\n **/\n(function () {\n    var moduleName = 'phoebe.library.directive';\n    var module;\n    try {\n        module = angular.module(moduleName);\n    } catch (e) {\n        module = angular.module(moduleName, []);\n    }\n\n    module.directive('phoPopBox', [\n        function () {\n            return {\n                restrict: 'A',\n                scope: {\n                    cancelfun: '&',\n                    clearfun: '&',\n                    submitfun: '&',\n                    beforeopen: '&',\n                    closefun: '&'\n                },\n                template: '<pho ng-transclude></pho>',\n                replace: false,\n                transclude: true,\n                link: function (scope, iElement, iAttrs) {\n                    var btns = [];\n                    if (iAttrs.hasOwnProperty('cancelfun')) {\n                        btns.push({\n                            text: \"关闭\",\n                            \"class\": \"btn btn-xs\",\n                            click: function () {\n                                $(this).dialog(\"destroy\").addClass('hide');\n                                scope.cancelfun();\n                            }\n                        });\n                    }\n                    if (iAttrs.hasOwnProperty('clearfun')) {\n                        btns.push({\n                            text: \"清空\",\n                            \"class\": \"btn btn-success btn-xs\",\n                            click: function () {\n                                scope.clearfun();\n                            }\n                        });\n                    }\n                    if (iAttrs.hasOwnProperty('submitfun')) {\n                        btns.push({\n                            text: \"提交\",\n                            \"class\": \"btn btn-primary btn-xs\",\n                            click: function () {\n                                scope.submitfun();\n                            }\n                        });\n                    }\n                    iElement.on('click', function () {\n                        var f = scope.beforeopen();\n                        if (f || f === undefined) {\n                            $(\"#\" + iAttrs.target).removeClass('hide').dialog({\n                                modal: true,\n                                title: \"<div class='widget-header widget-header-small'><h4 class='smaller'>\" + iAttrs.title + \"</h4></div>\",\n                                width: iAttrs.width || null,\n                                title_html: true,\n                                buttons: btns\n                            });\n\n                            if (iAttrs.hasOwnProperty('closefun')) {\n                                $(\"#\" + iAttrs.target).on(\"dialogclose\", function (event, ui) {\n                                    scope.closefun();\n                                });\n                            }\n                            if (iAttrs.height) {\n                                $(\"#\" + iAttrs.target).dialog({\n                                    height: iAttrs.height || null\n                                });\n                            }\n                            resize(iAttrs);\n                        }\n                    });\n                    //弹出框以后，要判断高度是否超过浏览器窗口的高度，并进行相应的调整\n                    function resize(attrs) {\n                        var pHeight = 80;\n                        if (attrs.cancelfun || attrs.clearfun || attrs.submitfun) {\n                            pHeight = 120;\n                        }\n                        var widgetId = attrs.id,\n                            screenHeight = $(window).height() - pHeight,\n                            contengHeight = $(\"#\" + widgetId).height(),\n                            css = {\n                                'max-height': screenHeight,\n                                'overflow-y': 'auto',\n                                'overflow-x': 'auto'\n                            };\n                        if (screenHeight < contengHeight) {\n                            css = {\n                                'height': screenHeight,\n                                'overflow-y': 'scroll',\n                                'overflow-x': 'hidden'\n                            };\n                        }\n                        //如果设置了弹出框高度，则直接使用这个高度\n                        /*if (attrs['height']) {\n                         css['height'] = parseInt(attrs['height'],10);\n                         }*/\n                        $(\"#\" + widgetId).css(css);\n                    }\n                }\n            };\n        }\n    ]);\n    /**\n     * 2015-02-03\n     * author : wizaliu\n     * description : 每页显示条数控制指令，如果使用了分页，则可以加上这个指令来控制每页显示的条数\n     * 默认选项有5、10、20、30、40、50\n     */\n    module.directive('phoPaginCtrl', [\n        function () {\n            return {\n                restrict: 'E',\n                replace: true,\n                transclude: true,\n                template: function (iElement, iAttrs) {\n                    var model = iAttrs.model,\n                        optionStr = '<option value=\"5\">5</option>';\n                    for (i = 1; i <= 5; i++) {\n                        optionStr += '<option value=\"' + i * 10 + '\">' + i * 10 + '</option>';\n                    }\n                    return '<div class=\"dataTables_length\"><label>显示 <select size=\"1\" ng-model=\"' + model + '\" aria-controls=\"sample-table-2\">' + optionStr + '</select> 条数据</label></div>';\n                },\n                link: function (scope, iElement, iAttrs) {\n                    var model = iAttrs.model;\n                    scope[model] = '10';\n                }\n            };\n        }\n    ]);\n    /*\n     *2015-01-20\n     *author：wizaliu\n     *description: 可重复添加相同内容的指令，例如添加多条路由表信息\n     **/\n    module.directive('phoWell', [\n        function () {\n            return {\n                restrict: 'E',\n                template: function (iElement, iAttrs) {\n                    var title = iAttrs.title || '';\n                    return '<div class=\"widget-box\"><div class=\"widget-header widget-header-small\">' + '<h5 class=\"widget-title lighter\">' + title + '</h5><span class=\"widget-toolbar\">' + '<a href=\"javascript:void(0)\" data-role=\"plus\"><i class=\"ace-icon fa fa-plus\"></i></a>' + '</span></div><div class=\"widget-body\"><div class=\"widget-core\">' + '<div class=\"profile-activity clearfix\" ng-transclude></div></div></div></div>';\n                },\n                replace: true,\n                transclude: true,\n                link: function (scope, iElement, iAtrs) {\n                    var delBtnStr = '<div class=\"tools action-buttons\"><a href=\"javascript:void(0)\" class=\"red\" data-role=\"del\">' + '<i class=\"ace-icon fa fa-times bigger-125\"></i></a></div>',\n                        container = iElement.find('.widget-core'),\n                        formStr = '<div class=\"profile-activity clearfix\">' + container.children().eq(0).html() + delBtnStr + '</div>';\n                    iElement.find('a[data-role=plus]').on('click', function () {\n                        container.append($(formStr));\n                    });\n                    iElement.delegate('a[data-role=del]', 'click', function () {\n                        if (window.confirm('确定删除吗？')) {\n                            $(this).closest('.profile-activity').remove();\n                        }\n                    });\n                }\n            };\n        }\n    ]);\n    /*\n     *2015-01-23\n     *author : wizaliu\n     *description : 简单的可重复添加相同内容的指令，例如添加多条路由表信息\n     **/\n    module.directive('phoSimpleWell', [\n        function () {\n            return {\n                restrict: 'E',\n                replace: true,\n                transclude: true,\n                template: function (iElement, iAttrs) {\n                    var id = iAttrs.id;\n                    if (!id) {\n                        console.log('请给您的phoSimpleWell指令添加“data-id”属性！否则无法添加getValue方法！');\n                    }\n                    return '<pho id=\"\"><div class=\"well\" ng-transclude></div></pho>';\n                },\n                link: function (scope, iElement, iAttrs) {\n                    var id = iAttrs.id,\n                        plusBtn = '<a href=\"javascript:void(0);\" class=\"green\"><i class=\"ace-icon fa fa-plus\"></i></a>',\n                        delBtn = '<a href=\"javascript:void(0);\" class=\"red\"><i class=\"ace-icon fa fa-times\"></i></a>',\n                        delTemplate = '<div class=\"well\">' + iElement.find('div:first').html() + delBtn + '</div>',\n                        plusTemplate = '<div class=\"well\">' + iElement.find('div:first').html() + plusBtn + '</div>';\n                    //向第一个代码块加一个“添加”按钮，并绑定添加事件\n                    $(plusBtn).appendTo(iElement.find('div:first'));\n                    iElement.delegate('a.green', 'click', function () {\n                        $(delTemplate).appendTo(iElement);\n                        //找到所有的日期框进行初始化\n                        angular.forEach(iElement.children('div:last').find('input[class*=date-picker]'), function (o) {\n                            $(o).datepicker({\n                                autoclose: true,\n                                format: 'yyyy-mm-dd'\n                            });\n                            $(o).next().on('click', function () {\n                                $(this).prev().focus();\n                            });\n                        });\n                    });\n                    //给所有“删除”按钮代理点击事件，如果被删除数据内容有id，则只hide不能remove，因为要记录id\n                    iElement.delegate('a.red', 'click', function () {\n                        if (window.confirm('确定删除吗？')) {\n                            if ($(this).prev().find('input[type=hidden]').val()) {\n                                //隐藏的同时，给这个代码块加一个state属性，值为remove，表示这个是要被删除的\n                                $(this).parent().hide().attr('state', 'remove');\n                            } else {\n                                $(this).parent().remove();\n                            }\n                        }\n                    });\n                    /*\n                     *给scope的UI属性上添加一个获取多选框选中项的方法，命名规则为\"get\"+首字母大写的groupName值+\"Value\"\n                     *例如，groupName为\"love\"，则添加的方法名为：\"getLoveValue\"，调用方法为：scope.UI.getLoveValue()\n                     */\n                    scope.UI = scope.UI || {};\n                    groupName = id.substr(0, 1).toUpperCase() + id.substr(1);\n                    scope.UI[\"get\" + groupName + \"Value\"] = function () {\n                        var arr = [];\n                        angular.forEach(iElement.children('div[class*=well]'), function (div) {\n                            var $div = $(div);\n                            o = {};\n                            //如果div上有state=remove的属性，则表示这个是要被删除的\n                            if ($div.attr('state') == 'remove') {\n                                o.state = 'remove';\n                            }\n                            angular.forEach($div.find('input'), function (c) {\n                                var attr = $(c).attr('data-key');\n                                if (attr !== 'id' || (attr === 'id' && $(c).val() !== '')) {\n                                    o[attr] = $(c).val();\n                                }\n                            });\n                            angular.forEach($div.find('textarea'), function (c) {\n                                o[$(c).attr('data-key')] = $(c).val();\n                            });\n                            angular.forEach($div.find('select'), function (c) {\n                                o[$(c).attr('data-key')] = $(c).val();\n                            });\n                            arr.push(o);\n                        });\n                        return arr;\n                    };\n                    //赋值方法，先将表单清空成原来的样子\n                    scope.UI['set' + groupName + 'Value'] = function (val) {\n                        //先将代码快重置\n                        iElement.html('');\n                        $(plusTemplate).appendTo(iElement);\n                        var count = val.length - 1,\n                            plusBtn = iElement.find('a.green');\n                        for (var i = 0; i < count; i++) {\n                            plusBtn.trigger('click');\n                        }\n                        //赋值\n                        angular.forEach(val, function (o, index) {\n                            var $subForm = iElement.children('div').eq(index);\n                            for (var k in o) {\n                                $subForm.find('[data-key=' + k + ']').val(o[k]);\n                            }\n                        });\n                    };\n                }\n            };\n        }\n    ]);\n    /*\n     *2015-01-29\n     *author : wizaliu\n     *description : 单选框指令\n     */\n    module.directive('phoRadio', [\n        function () {\n            return {\n                restrict: 'E',\n                replace: true,\n                scope: {\n                    change: '&'\n                },\n                template: function (iElement, iAttrs) {\n                    var name = iAttrs.group,\n                        value = iAttrs.value,\n                        msg = iElement.html();\n                    return '<div class=\"radio\"><label><input name=\"' + name + '\" value=\"' + value + '\" type=\"radio\" class=\"ace\">' + '<span class=\"lbl\">' + msg + '</span></label></div>';\n                },\n                link: function (scope, iElement, iAttrs) {\n                    //如果配置了data-selected属性，则判断，将被选中的选中\n                    if (iAttrs.selected == \"true\") {\n                        iElement.find('input')[0].checked = true;\n                    }\n                    /*\n                     *向scope.UI上添加get和set方法，方法名为\"get\"+首字母大写的data-group+\"Value\"、\"set\"+首字母大写的data-group+\"Value\"\n                     *如果有指令上有data-change属性，则添加一个onchange的监听事件\n                     */\n                    var group = iAttrs.group,\n                        name = group.substr(0, 1).toUpperCase() + group.substr(1);\n                    scope.$parent.UI = scope.$parent.UI || {};\n                    scope.$parent.UI['get' + name + 'Value'] = function () {\n                        var val = '';\n                        angular.forEach($('input[name=' + group + ']'), function (el) {\n                            if (el.checked === true) {\n                                val = $(el).val();\n                            }\n                        });\n                        return val;\n                    };\n                    scope.$parent.UI['set' + name + 'Value'] = function (val) {\n                        angular.forEach($('input[name=' + group + ']'), function (el) {\n                            if ($(el).val() == val) {\n                                el.checked = true;\n                            }\n                        });\n                    };\n                    if (iAttrs.change) {\n                        iElement.on('change', function () {\n                            scope.change(scope.$parent.UI['get' + name + 'Value']());\n                        });\n                    }\n                }\n            };\n        }\n    ]);\n    /*\n     *2015-01-22\n     *author : wizaliu\n     *description : 多选框指令，提供全选，全不选功能；提供点击后绑定事件功能\n     */\n    module.directive('phoCheckbox', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                change: \"&\"\n            },\n            template: function (iElement, iAttrs) {\n                var name = iAttrs.group,\n                    msg = iElement.html(),\n                    value = iAttrs.value ? 'value=\"' + iAttrs.value + '\"' : \"\",\n                    caption = iAttrs.caption === '' ? 'caption' : '';\n                return '<div class=\"checkbox pd0 mg0\"><label><input name=\"' + name + '\" ' + value + ' type=\"checkbox\" class=\"ace\" ' + caption + '>' + '<span class=\"lbl\">' + msg + '</span></label></div>';\n            },\n            link: function (scope, iElement, iAttrs) {\n                var name = iAttrs.group,\n                    groupName = iAttrs.group;\n                if (iAttrs.caption === '') {\n                    iElement.bind('change', function () {\n                        var checked = $(this).find('input')[0].checked,\n                            checkboxes = $(\"input[name=\" + name + \"]\");\n                        angular.forEach(checkboxes, function (o) {\n                            o.checked = checked;\n                        });\n                    });\n                }\n                /*\n                 *给scope的UI属性上添加一个获取多选框选中项的方法，命名规则为\"get\"+首字母大写的groupName值+\"Selected\"\n                 *例如，groupName为\"love\"，则添加的方法名为：\"getLoveSelected\"，调用方法为：scope.UI.getLoveSelected()\n                 */\n                scope.$parent.UI = scope.$parent.UI || {};\n                groupName = groupName.substr(0, 1).toUpperCase() + groupName.substr(1);\n                scope.$parent.UI[\"get\" + groupName + \"Selected\"] = function () {\n                    var arr = [],\n                        checkboxes = $(\"input[name=\" + name + \"]\");\n                    angular.forEach(checkboxes, function (o, index) {\n                        if (o.checked && $(o).attr('caption') !== \"\") {\n                            arr.push(index - 1);\n                        }\n                    });\n                    return arr;\n                };\n                /**\n                 * 获取选中项值的方法，获取的值是每一个被选中的checkbox的value，而不是索引\n                 * @param val\n                 */\n                scope.$parent.UI[\"get\" + groupName + \"SelectedValue\"] = function () {\n                    var arr = [],\n                        checkboxes = $(\"input[name=\" + name + \"]\");\n                    angular.forEach(checkboxes, function (o, index) {\n                        var $o = $(o);\n                        if (o.checked && $o.attr('caption') !== \"\") {\n                            if (!$o.val()) {\n                                arr.push($o.closest('div').attr('data-value'));\n                            } else {\n                                arr.push($o.val());\n                            }\n                        }\n                    });\n                    return arr;\n                };\n                /**\n                 * 在scope.UI上添加一个set方法，用于赋值。参数为包含被选中框的value组成的数组\n                 * 方法名为：\"set\"+首字母大写的group值+\"Value\"\n                 */\n                scope.$parent.UI['set' + groupName + 'Value'] = function (val) {\n                    scope.$parent.UI['clear' + groupName]();\n                    angular.forEach(val, function (v) {\n                        angular.forEach($(\"input[value=\" + v + \"]\"), function (o) {\n                            o.checked = true;\n                        });\n                    });\n                };\n                /**\n                 * 在scope.UI上添加一个赋值方法，参数为checkbox组中被选中框的index值组成的数组\n                 * 方法名为：\"set\"+首字母大写的group值+\"ValueByIndex\"\n                 */\n                scope.$parent.UI['set' + groupName + 'ValueByIndex'] = function (val) {\n                    scope.$parent.UI['clear' + groupName]();\n                    angular.forEach(val, function (v) {\n                        $('input[name=' + name + ']').eq(v)[0].checked = true;\n                    });\n                };\n                /**\n                 * 在scope.UI上添加一个清空方法，用于清空一选项\n                 * 方法名为：\"clear\"+首字母大写的group值\n                 */\n                scope.$parent.UI['clear' + groupName] = function () {\n                    angular.forEach($('input[name=' + name + ']'), function (o) {\n                        o.checked = false;\n                    });\n                };\n                /**\n                 * 在scope.UI上添加一个全选方法，用于全选\n                 * 方法名为：\"select\"+首字母大写的group值+\"All\"\n                 */\n                scope.$parent.UI['select' + groupName + 'All'] = function () {\n                    angular.forEach($('input[name=' + name + ']'), function (o) {\n                        o.checked = true;\n                    });\n                };\n                //如果该元素设置了\"data-change\"属性，则在这个多选框上添加一个onchange事件\n                if (iAttrs.change) {\n                    iElement.bind('change', function () {\n                        var checked = $(this).find('input')[0].checked;\n                        var selected = scope.$parent.UI.getCheckboxSelected();\n                        scope.change(selected);\n                    });\n                }\n            }\n        };\n    });\n    /**\n     *2015-01-22\n     *author : wizaliu\n     *description : 表格全选的checkbox\n     */\n    module.directive('phoSelectAllRows', function ($document) {\n        return function (scope, element, attrs) {\n            element.on('click', function () {\n                var that = this,\n                    checked = that.checked;\n                $(this).closest('table').find('tr > td:first-child input:checkbox').each(function () {\n                    this.checked = checked;\n                    $(this).closest('tr').toggleClass('selected');\n                });\n                angular.forEach(scope.houses, function (house) {\n                    house.selected = checked;\n                });\n            });\n        };\n    });\n    /**\n     *2015-01-22\n     *author : wizaliu\n     *description : 普通弹出框的相关操作\n     *    给弹出框的两个关闭按钮添加监听事件，单击以后关闭\n     *\n     */\n    module.directive('phoWidgetBoxTemplate', function () {\n        var directive = {\n            restrict: \"CEA\",\n            link: function (scope, element, attrs) {\n                //关闭按钮\n                element.find(\"a[data-role=widget_close]\").on(\"click\", function () {\n                    $.hideWidget(angular.element(this).attr(\"data-target\"));\n                    scope.item = {};\n                });\n                //清空按钮\n                element.find('a[data-role=widget_clear]').on('click', function () {\n                    if (scope.item) {\n                        scope.item = {};\n                    }\n                });\n            }\n        };\n        return directive;\n    });\n\n    /**\n     * 日期选择控件\n     * 验证截止日期大于起始日期：依据data-role来区分是否需要验证\n     * usage:\n     *      一般用法：<input pho_datepicker />\n     *      开始时间：<input pho_datepicker data-role=\"startDate\" data-end=\"endDate\" />\n     *      结束时间：<input pho_datepicker data-role=\"endDate\" data-start=\"endDate\" />\n     *      所选日期不能大于今天：<input pho_datepicker data-role=\"beforeToday\" />\n     *\n     * 参数：pho_datepicker--》申明为日期选择框\n     *      data-role--》日期选择框类型：startDate（开始时间）、endDate（结束时间）、beforeToday（所选日期不能大于今天）\n     *      data-start-->与结束时间对应的开始时间的id\n     *      data-end-->与开始时间对应的结束时间的id\n     */\n    module.directive('phoDatepicker', function () {\n        return function (scope, element, attrs) {\n            $(element).datepicker({\n                autoclose: true,\n                format: 'yyyy-mm-dd'\n            });\n            $(element).next().on('click', function () {\n                $(this).prev().focus();\n            });\n            /**\n             * 开始时间或结束时间\n             */\n            if (attrs.role === 'startDate' || attrs.role === 'endDate') {\n                var startEl = null,\n                    endEl = null;\n                if (attrs.role === 'startDate') {\n                    startEl = $$(element);\n                    endEl = $$('#' + attrs.end);\n                } else {\n                    startEl = $$('#' + attrs.start);\n                    endEl = $$(element);\n                }\n                element.on('changeDate', function () {\n                    try {\n                        var start = startEl.val().replace(/-/g, \"\"),\n                            end = endEl.val().replace(/-/g, \"\");\n                        if (start && end) {\n                            if (end < start) {\n                                $.tips(\"结束日期不能小于起始日期！\", \"error\");\n                                $$(this).val(\"\");\n                            }\n                        }\n                    } catch (e) {\n                        console.log(e);\n                    }\n                });\n            }\n            //判断所选日期不能大于今天\n            if (attrs.role == 'beforeToday') {\n                element.on('changeDate', function () {\n                    var selected = $$(this).val().replace(/-/g, \"\"),\n                        newDate = new Date(),\n                        ny = newDate.getFullYear(),\n                        nm = (newDate.getMonth() + 1) < 10 ? '0' + (newDate.getMonth() + 1) : (newDate.getMonth() + 1),\n                        nd = newDate.getDate() < 10 ? '0' + newDate.getDate() : newDate.getDate(),\n                        today = ny + \"\" + nm + \"\" + nd;\n                    if (today < selected) {\n                        $.tips(\"所选日期不能大于今天！\", \"error\");\n                        $$(this).val(\"\");\n                    }\n                });\n            }\n        };\n    });\n    /*\n     *2015-01-29\n     *author : wizaliu\n     *description : 数据列表。每条数据按照内联元素样式排列，排满一行后自动换行\n     *              该指令还可以被当做多选框来使用，需要给指令标签添加\"data-checkbox='true'\"属性，\n     *              然后scope.UI上会自动注册get和set方法\n     */\n    module.directive('phoDataList', [\n        function () {\n            return {\n                restrict: 'E',\n                replace: true,\n                scope: {\n                    data: '@list'\n                },\n                transclude: true,\n                template: function (iElement, iAttrs) {\n                    var id = iAttrs.id;\n                    return '<ul class=\"data-list\" id=\"' + id + '\"></ul>';\n                },\n                compile: function () {\n                    return {\n                        pre: function (scope, iElement, iAttrs) {\n                            var data = $.parseJSON(scope.data),\n                                _html = '';\n                            angular.forEach(data, function (d) {\n                                _html += '<li><a href=\"javascript:void(0)\" data-key=\"' + d.key + '\">' + d.value + '</a></li>';\n                            });\n                            iElement.html($(_html));\n                        },\n                        post: function (scope, iElement, iAttrs) {\n                            /*\n                             *如果设置的data-checkbox=\"true\"，则给每一条数据绑定单击事件，切换选中和未选中样式，并向scope.UI上注册get和set方法，命名方式为\"get\"+首字母大写的data-id+\"Value\"，\"set\"+首字母大写的data-id+\"Value\"。从而实现checkbox功能\n                             *再提供一个清空值和设置选中项的方法，方法名分别为\"clear\"+首字母大写的data-id+\"Value\";\"set\"+首字母大写的data-id+\"Selected\"\n                             *\n                             */\n                            var id = iAttrs.id,\n                                name = id.substr(0, 1).toUpperCase() + id.substr(1);\n                            if (iAttrs.checkbox === \"true\") {\n                                iElement.delegate('a', 'click', function () {\n                                    $(this).toggleClass('data-list-on');\n                                });\n                                scope.$parent.UI = scope.$parent.UI || {};\n                                scope.$parent.UI['get' + name + 'Value'] = getValue;\n                                scope.$parent.UI['set' + name + 'Value'] = setValue;\n                                scope.$parent.UI['clear' + name + 'Value'] = clear;\n                                scope.$parent.UI['set' + name + 'Selected'] = setSelected;\n                            }\n                            //取值方法\n                            function getValue() {\n                                var arr = [];\n                                angular.forEach(iElement.find('a.data-list-on'), function (el) {\n                                    arr.push($(el).attr('data-key'));\n                                });\n                                return arr;\n                            }\n\n                            //赋值方法\n                            function setValue(val) {\n                                var _html = '';\n                                angular.forEach(val, function (d) {\n                                    _html += '<li><a href=\"javascript:void(0)\" data-code=\"' + d.key + '\">' + d.value + '</a></li>';\n                                });\n                                iElement.html($(_html));\n                            }\n\n                            //清空方法\n                            function clear() {\n                                angular.forEach(iElement.find('a.data-list-on'), function (el) {\n                                    $(el).removeClass('data-list-on');\n                                });\n                            }\n\n                            //设置选中值得方法\n                            function setSelected(selected) {\n                                var $el = null;\n                                angular.forEach(iElement.find('a'), function (el) {\n                                    $el = $(el);\n                                    angular.forEach(selected, function (s) {\n                                        if ($el.attr('data-key') == s) {\n                                            $el.addClass('data-list-on');\n                                        }\n                                    });\n                                });\n                            }\n                        }\n                    };\n                }\n            };\n        }\n    ]);\n    /**\n     * 2015-01-29\n     * author ： wizaliu\n     * description : 表单控件指令。可使用的表单控件包含以下类型（“ ”中表示该类型可配置的属性和可添加的指令）：\n     *\n     *  1、输入框：input  “”\n     *  2、文本框：textarea  “”\n     *  3、日期选择框：datepicker  “data-date-format:格式化方式，默认为‘yyyy-mm-dd’；data-role；data-end；data-start”\n     *\n     *  4、下拉框：dropdwon\n     *     下拉框分三种：（1）字典表；（2）外健；（3）级联下拉框。每一种下拉框有唯一标识的配置想，并且互斥（外健下拉框和级联下拉框都要配置data—options）\n     *     如果配置了data-dict，则视为字典下拉框，data-dict为加载的数据来源，用于构建ng-options；\n     *     如果配置了data-options，则视为外健的下拉框，data-options为加载的数据来源，用于构建ng-options;\n     *          data-options有两种格式：\n     *              1、只配置已经加载的数组，并且这个数据已经被绑定在scope的作用域链上，（例如：hostList表示$scope.hostList）\n     *                  使用这种配置，需要在directive的template阶段拼接ng-options中前面的部分，（例如下拉框字典：opt.id as opt.name for opt in hostList）\n     *              2、当下拉框的显示值由数据源model中的多个字段共同组成时，可配置ng-options中的全部内容，（例如下拉框外健：opt.id as (opt.hostname +' <' + opt.hostnumber + '>') for opt in hostList）\n     *                  使用这种配置，直接将配置信息当作ng-options即可\n     *     如果配置了data-trigger，则视为级联下拉菜单，data-trigger为上一级下拉框的id;\n     *          此外，还要配置data-options（用于构建ng-options）、data-source-model（加载数据使用的模型名称）、data-load-condition：（加载数据源时的条件，例如：{include:['cfg_host']}）、data-load-method:加载数据的方法\n     *\n     *  7、插槽式字段：slot  “”\n     *\n     *  此外，每一种表单控件都可以配置以下属性：\n     *   1、data-type:控件类型\n     *   2、data-model:ng-model\n     *   3、data-required:必填\n     *   4、data-disabled:ng-disabled\n     *   5、data-id：id\n     *   6、data-name：name\n     */\n    module.directive('phoFormControls', ['PhoebeResource',\n        function (PhoebeResource) {\n            //根据配置属性构造属性字符串\n            function buildAttrbutes(attr) {\n                var str = '';\n                for (var k in attr.$attr) {\n                    switch (k) {\n                        //type属性不用加到标签中\n                        case 'type':\n                            break;\n                        //将model设置为ng-model指令\n                        case 'model':\n                            str += ' ng-model=\"' + attr[k] + '\"';\n                            break;\n                        //name是控件的中文名，不用加到标签中\n                        case 'name':\n                            break;\n                        //将disabled设置为ng-disabled指令\n                        case 'disabled':\n                            attr[k] = attr[k] || true;\n                            str += ' ng-disabled=\"' + attr[k] + '\"';\n                            break;\n                        case 'required':\n                            str += ' ng-required=\"true\"';\n                            break;\n                        case 'dict':\n                            //字典表下拉菜单\n                            str += ' ng-options=\"opt.key as opt.value for opt in ' + attr[k] + '\"';\n                            break;\n                        case 'options':\n                            //外健下拉框或者二级下拉框\n                            if (attr[k].split(' ').length > 1) { //给出全部配置\n                                str += ' ng-options=\"' + attr[k] + '\"';\n                            } else { //只配置数据来源\n                                str += ' ng-options=\"opt.id as opt.name for opt in ' + attr[k] + '\"';\n                            }\n                            break;\n                        case 'style':\n                            //自定义样式\n                            str += ' style=\"' + attr[k] + '\"';\n                            break;\n                        case 'change':\n                            //绑定ng-change事件\n                            str += ' ng-change=\"' + attr[k] + '\"';\n                            break;\n                        //将其他属性直接添加到标签中\n                        case 'id':\n                            str += ' id=\"' + attr[k] + '\"';\n                            break;\n                        default:\n                            str += ' ' + attr.$attr[k] + '=\"' + attr[k] + '\"';\n                            break;\n                    }\n                }\n                return str;\n            }\n\n            //根据表单控件类型构造字符串\n            function buildWidget(attrs) {\n                var name = attrs.name ? attrs.name + '：' : '',\n                    str = '<div class=\"form-element\"><label class=\"form-label\">' + name + '</label><div class=\"form-content\">';\n                switch (attrs.type) {\n                    case 'input':\n                        str += '<input class=\"col-xs-12\" type=\"text\"' + buildAttrbutes(attrs) + '/></div></div>';\n                        break;\n                    case 'number':\n                        str += '<input class=\"col-xs-12\" type=\"number\"' + buildAttrbutes(attrs) + '/></div></div>';\n                        break;\n                    case 'textarea':\n                        str += '<textarea class=\"col-xs-12\"' + buildAttrbutes(attrs) + '></textarea></div></div>';\n                        break;\n                    case 'datepicker':\n                        str += '<div class=\"input-group\"><input class=\"form-control date-picker\" type=\"text\" pho_datepicker' + buildAttrbutes(attrs) + '/><span class=\"input-group-addon\"><i class=\"fa fa-calendar bigger-110\"></i></span></div></div></div>';\n                        break;\n                    case 'dropdown':\n                        str += '<select class=\"col-xs-12\"' + buildAttrbutes(attrs) + '><option value=\"\">请选择</option></select></div></div>';\n                        break;\n                    /*case 'checkbox':\n                     var dataSource = attrs['source'];\n                     str += '<ul class=\"checkbox-list\"><li ng-repeat=\"equipment in equipmentList\"><a href=\"javascript:void(0);\" data-code=\"{{equipment.code}}\">{{equipment.name}}</a></li></ul></div></div>';\n                     break;\n                     case 'radiobox':\n                     break;*/\n                    default:\n                        break;\n                }\n                return str;\n            }\n\n            return {\n                restrict: 'E',\n                template: function (tElement, tAttr) {\n                    return buildWidget(tAttr);\n                },\n                replace: true,\n                transclude: true,\n                link: function (scope, iElement, iAttrs) {\n                    var s = scope;\n                    //级联下拉菜单的触发事件\n                    if (iAttrs.trigger) {\n                        var model = iAttrs.trigger,\n                        //确保dataSource指向下拉菜单数据源的名称\n                            dataSource = iAttrs.options.split(' ').pop(),\n                            dataSourceModuleName = iAttrs.sourceModel,\n                            loadCondition = {},\n                            loadMethod = 'query';\n                        if (iAttrs.loadCondition) {\n                            loadCondition = $.parseJSON(iAttrs.loadCondition.replace(/'/g, '\"'));\n                        }\n                        scope.$watch(model, function (nv, ov, scope) {\n                            if (nv) {\n                                var module = new PhoebeResource('/' + dataSourceModuleName);\n                                module[loadMethod](typeof(loadCondition) == 'string' ? {} : loadCondition).success(function (data) {\n                                    scope[dataSource] = data;\n                                }).error(function () {\n                                    $.tips('加载级联下拉框数据失败！', 'error');\n                                });\n                            }\n                        });\n                    }\n                }\n            };\n        }\n    ]);\n    /**\n     * 根据表单配置的json串构建表单控件\n     * 要配置的项有：\n     *      data-controllers:表单控件的配置数据，该值应该有一个scope上的属性与之对应，phoAutoForm会监听scope上的‘controllers’，若有变化，则重新渲染表单\n     *      data-model-name：表单初始化数据的名称，例如在scope中是scope.item，那么这里就写item\n     */\n    module.directive('phoAutoForms', ['PhoebeDict', 'PhoebeResource',\n        function (PhoebeDict, PhoebeResource) {\n            //将属性列表按照某字段排序\n            function sortByKey(data, key) {\n                if (!key) {\n                    return data;\n                }\n                for (var i = 1, l = data.length; i < l; i++) {\n                    if (data[i][key] < data[i - 1][key]) {\n                        var j = i - 1;\n                        var x = data[i][key];\n                        data[i][key] = data[i - 1][key];\n                        while (data[j] && x < data[j][key]) {\n                            data[j + 1][key] = data[j][key];\n                            j--;\n                        }\n                        data[j + 1][key] = x;\n                    }\n                }\n                return data;\n            }\n\n            //拼接HTML文档\n            function buildHTML(attrs) {\n                //        var str = '<div class=\"row\">';\n                var str = '';\n                angular.forEach(attrs, function (attr) {\n                    str += '<div class=\"col-xs-' + attr.grids + '\"><div class=\"form-element\"><label class=\"form-label\">' + attr.cnName + '：</label><div class=\"form-content\">';\n                    var type = attr.type;\n                    switch (type) {\n                        case 'input':\n                            str += '<input type=\"text\" class=\"form-control ' + attr.enName + '\"></div></div></div>';\n                            break;\n                        case 'datepicker':\n                            str += '<div class=\"input-group\"><input class=\"form-control date-picker ' + attr.enName + '\" /><span class=\"input-group-addon\"><i class=\"fa fa-calendar bigger-110\"></i></span></div></div></div></div>';\n                            break;\n                        case 'textarea':\n                            str += '<textarea class=\"col-xs-12 ' + attr.enName + '\"></textarea></div></div></div>';\n                            break;\n                        case 'dropdown_dict':\n                            str += '<select class=\"form-control ' + attr.enName + '\"><option value=\"\">请选择</option></select></div></div></div>';\n                            break;\n                        case 'dropdown_foreign':\n                            str += '<select class=\"form-control ' + attr.enName + '\"><option value=\"\">请选择</option></select></div></div></div>';\n                            break;\n                        /*case 'checkbox':\n                         break;\n                         case 'radiobox':\n                         break;*/\n                        default:\n                            break;\n                    }\n                });\n                //        str += '</div>';\n                return str;\n            }\n\n            //控件初始化和赋值\n            function initialize(attrs, modelName, scope) {\n                var model = angular.copy(scope[modelName]) || {};\n                angular.forEach(attrs, function (attr) {\n                    var type = attr.type,\n                        enName = attr.enName,\n                        $$el = $$('.' + enName);\n                    switch (type) {\n                        case 'input':\n                            break;\n                        case 'textarea':\n                            break;\n                        case 'datepicker':\n                            //日期选择框，先初始化然后赋值\n                            $$el.datepicker({\n                                'autoclose': true,\n                                'format': attr.dateFormat || 'yyyy-mm-dd'\n                            });\n                            $$el.next().on('click', function () {\n                                $(this).prev().focus();\n                            });\n                            break;\n                        case 'dropdown_dict':\n                            //字典表下拉框，先生成下拉菜单。 如果没有加载字典项，加载之\n                            var dictName = attr.dictName;\n                            if (!scope.dicts || !scope.dicts[dictName]) {\n                                PhoebeDict.preload([dictName]).success(function (data) {\n                                    if (!scope.dicts) {\n                                        scope.dicts = {};\n                                    }\n                                    scope.dicts[dictName] = PhoebeDict.getDict([dictName]).dictoptions;\n                                    fillInOptions($$el, scope.dicts[dictName], 'key', 'value');\n                                });\n                            } else {\n                                fillInOptions($$el, scope.dicts[dictName], 'key', 'value');\n                            }\n                            break;\n                        case 'dropdown_foreign':\n                            //外健下拉菜单，先生成下拉菜单。如果没有数据，加载之\n                            var foreignModel = attr.foreighModel,\n                            //所有外健下拉菜单数据名==外健模型名+‘List’\n                                optionsName = foreignModel + 'List';\n                            if (optionsName) {\n                                if (!scope[foreignModel]) {\n                                    var loadCondition;\n                                    if (attr.foreignSearchStr) {\n                                        loadCondition = $.parseJSON(attr.foreignSearchStr.replace(/'/g, '\"'));\n                                    }\n                                    new PhoebeResource('/' + foreignModel).query(loadCondition || {}).success(function (data) {\n                                        scope[optionsName] = data;\n                                        fillInOptions($$el, scope[optionsName], 'id', 'name');\n                                    }).error('加载外健下拉列表失败！', 'error');\n                                } else {\n                                    fillInOptions($$el, scope[optionsName], 'id', 'name');\n                                }\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                    //如果有初始值，赋值\n                    if (model[enName]) {\n                        setValue($$el, type, model[enName]);\n                    }\n                });\n                //向下拉框加入选项\n                function fillInOptions(el, options, key, value) {\n                    var str = '';\n                    angular.forEach(options, function (o) {\n                        str += '<option value=\"' + o[key] + '\">' + o[value] + '</option>';\n                    });\n                    el.append($$(str));\n                }\n            }\n\n            //赋值\n            function setValue(el, type, val) {\n                if (!val) {\n                    return false;\n                }\n                switch (type) {\n                    /*case 'datepicker':\n\n                     break;*/\n                    case 'dropdown_dict':\n                        break;\n                    case 'dropdown_foreign':\n                        break;\n                    default:\n                        el.val(val);\n                        break;\n                }\n            }\n\n            //取值方法，返回所有表单控件值组成的json串\n            function getValues(attrs) {\n                var o = {};\n                angular.forEach(attrs, function (attr) {\n                    var key = attr.enName,\n                        $$el = $$('.' + key);\n                    o[key] = $$el.val();\n                });\n                return o;\n            }\n\n            //表单初始化赋值方法\n            function setValues(attrs, modelName, scope) {\n                if (!scope[modelName]) {\n                    return false;\n                }\n                var obj = scope[modelName];\n                angular.forEach(attrs, function (attr) {\n                    setValue($$('.' + attr.enName), attr.type, obj[attr.enName]);\n                });\n            }\n\n            return {\n                restrict: 'A',\n                replace: false,\n                transclude: false,\n                template: function (tElement, tAttr) {\n                    return '';\n                },\n                compile: function () {\n                    return {\n                        pre: function (scope, iElement, iAttrs) {\n                            var controllers = iAttrs.controllers;\n                            scope.$watch(controllers, function (newVal, oldVal, scope) {\n                                var modelName = iAttrs.modelName;\n                                if (newVal && newVal.length > 0) {\n                                    var formStr = buildHTML(sortByKey(newVal, 'index'), modelName, scope);\n                                    $$(iElement).html(formStr);\n                                    initialize(newVal, modelName, scope);\n                                }\n                            });\n                        },\n                        post: function (scope, iElement, iAttrs) {\n                            var id = iAttrs.id;\n                            scope['get' + id + 'Values'] = getValues;\n                            scope['set' + id + 'Values'] = setValues;\n                        }\n                    };\n                }\n            };\n        }\n    ]);\n    /**\n     * 2015-01-26\n     * author : wizaliu\n     * description : 文件上传指令\n     */\n    module.directive('phoFileUpload', [\n        function () {\n            return {\n                restrict: 'EA',\n                replace: true,\n                transclude: true,\n                template: function (iElement, iAttrs) {\n                    if (!window.FileReader) {\n                        $.tips('您使用的浏览器不支持文件上传功能！', 'error');\n                    }\n                    return '<label class=\"ace-file-input\"><input type=\"file\">' + '<span class=\"ace-file-container\" data-title=\"选择文件\"><span class=\"ace-file-name\" data-title=\"单击选择文件\">' + '<i class=\" ace-icon fa fa-upload\"></i></span></span><a class=\"remove\" href=\"#\"><i class=\" ace-icon fa fa-times\"></i></a></label>';\n                },\n                link: function (scope, iElement, iAttrs) {\n                    var id = iAttrs.id;\n                    iElement.find('input[type=file]')\n                        //                .ace_file_input()\n                        .on('change', function (e) {\n                            scope.$apply(function () {\n                                iElement.find('.ace-file-name').attr('data-title', '单击选择文件');\n                                scope.UI = scope.UI || {};\n                                scope.UI[id + 'Value'] = {};\n                            });\n                            var el = $(this),\n                                file = e.target.files[0],\n                                fileReader = new FileReader();\n                            fileReader.onloadend = function (e) {\n                                var content = e.target.result,\n                                    time = new Date(file.lastModifiedDate),\n                                    year = time.getFullYear(),\n                                    mon = time.getMonth() + 1,\n                                    day = time.getDate();\n                                //将文件大小、文件名称、最后修改时间、文件内容组成一个object，放在scope.UI上，属性名称为\"data-id\"+\"Value\"\n                                scope.$apply(function () {\n                                    scope.UI[id + 'Value'] = {\n                                        'size': file.size + 'K',\n                                        'name': file.name,\n                                        'updateTime': year + '-' + mon + '-' + day,\n                                        'content': content\n                                    };\n                                });\n                                //将文件名称放在表单控件上\n                                iElement.find('.ace-file-name').attr('data-title', file.name);\n                            };\n                            if (file && !legal(file)) {\n                                fileReader.readAsText(file, 'UTF-8');\n                            }\n                        });\n                    //验证选择的文件是否合法\n                    function legal(file) {\n                        if (iAttrs.maxSize) {\n                            var size = file.size / 1024,\n                                maxSize = iAttrs.maxSize;\n                            if (size > maxSize) {\n                                $.tips('所选择的文件大小为【' + size + 'M】，超过了最大限制【' + maxSize + 'M】，请重新选择！', 'error');\n                                return 1;\n                            }\n                        }\n                        if (iAttrs.allow) {\n                            var allowed = iAttrs.allow,\n                                format = file.name.split('.')[1];\n                            if (allowed.indexOf(format) == -1) {\n                                $.tips('请选择以下格式【' + allowed + '】', 'error');\n                                return 1;\n                            }\n                        }\n                        return 0;\n                    }\n\n                    //向scope.UI添加一个获取值得方法，方法名为\"get\"+首字母大写的\"data-id\"属性+\"Value\"\n                    scope.UI = scope.UI || {};\n                    name = id.substr(0, 1).toUpperCase() + id.substr(1);\n                    scope.UI['get' + name + 'Value'] = function () {\n                        return scope.UI[id + 'Value'];\n                    };\n                    /**\n                     * 向scope.UI添加一个清空值的方法\n                     * 用于将scope.UI上保存的该文件的数据清空，同时将文件输入框中的文字恢复成“clear”+首字母大写的\"data-id\"属性+\"Value\"\n                     * 方法名为\"get\"+首字母大写的\"data-id\"属性+\"Value\"\n                     */\n                    scope.UI['clear' + name + 'Value'] = function () {\n                        iElement.find('input[type=file]').val('');\n                        iElement.find('.ace-file-name').attr('data-title', '单击选择文件');\n                        scope.$apply(function () {\n                            scope.UI[id + 'Value'] = {};\n                        });\n                    };\n                }\n            };\n        }\n    ]);\n    /*\n     *2015-02-03\n     *author : wizaliu\n     *description : 树指令，配置项包括：\n     *              data-id             树元素的id\n     *              data-source         数据来源，必须是scope上的一个属性，如果是异步加载的，\n     *              data-idField        树中每个节点的id字段的名字\n     *              data-foreignKey     树中每个节点的父节点字段的名字（例如“parentid”）\n     *              data-rootLevel      树中第一级节点的父节点id（例如“0000”），这些节点没有父节点，所以父节点不指向任何节点\n     *              data-menu           给树配置右键菜单，目前提供添加（add）、编辑（edit）、删除（del）三种，需要几个就配几个，中间用\" \"隔开（例如：data-menu=\"add del\"）、如果默认三种都要，就写data-menu就可以，不用给值\n     *              data-addfun         该属性指向scope上的一个方法，当右键菜单中点击“添加”后，会触发该方法\n     *              data-editfun        该属性指向scope上的一个方法，当右键菜单中点击“编辑”后，会触发该方法\n     *              data-delfun         该属性指向scope上的一个方法，当右键菜单中点击“删除”后，会触发该方法\n     *              data-selectfun      该属性指向scope上的一个方法，当选择树上的一个节点后，触发该方法\n     *\n     *\n     */\n    module.directive('phoTree', [\n        function () {\n            //上下文构造方法\n            function ContextMunu(scope, config) {\n                if (!config) {\n                    $.tips('创建右键菜单失败，因为没有配置项！', 'error');\n                }\n                this.scope = scope;\n                this.config = config;\n                this.treeId = config.id;\n                this.menuId = config.id + 'Menu';\n                this.munus = config.menu;\n                return this.buildContextMenu(config);\n            }\n\n            ContextMunu.prototype = {\n                buildContextMenu: function (config) {\n                    function addBtn(arr) {\n                        arr.push({\n                            text: \"添加孩子节点\"\n                        });\n                    }\n\n                    function editBtn(arr) {\n                        arr.push({\n                            text: \"编辑节点\"\n                        });\n                    }\n\n                    function delBtn(arr) {\n                        arr.push({\n                            text: \"删除节点\"\n                        });\n                    }\n\n                    var that = this,\n                        treeId = config.id,\n                        menuId = treeId + 'Menu',\n                        node = $('<ul id=\"' + treeId + '\"></ul>'),\n                        menuArr = [],\n                        menus = config.menu.split(' ');\n                    if (menus.length && menus[0] !== '') {\n                        for (var i = 0, l = menus.length; i < l; i++) {\n                            var menu = menus[i];\n                            switch (menus[i]) {\n                                case 'add':\n                                    addBtn(menuArr);\n                                    break;\n                                case 'edit':\n                                    editBtn(menuArr);\n                                    break;\n                                case 'del':\n                                    delBtn(menuArr);\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n                    } else {\n                        addBtn(menuArr);\n                        editBtn(menuArr);\n                        delBtn(menuArr);\n                    }\n                    //渲染右键菜单\n                    node.appendTo($('body')).kendoContextMenu({\n                        filter: '#' + treeId + ' .k-in',\n                        dataSource: menuArr,\n                        select: function (e) {\n                            that.contextMenuHander.call(that, e);\n                        }\n                    });\n                },\n                contextMenuHander: function (e) {\n                    var that = this;\n                    var button = $(e.item);\n                    var node = $(e.target);\n                    var operType = button.text().substr(0, 2);\n                    var treeView = $(\"#\" + that.treeId).data('kendoTreeView');\n                    var selectedItem = treeView.dataItem(node);\n                    var params = {\n                        t: treeView,\n                        n: selectedItem\n                    };\n                    switch (operType) {\n                        case '添加':\n                            that.scope.addfun(params);\n                            break;\n                        case '编辑':\n                            that.scope.editfun(params);\n                            break;\n                        case '删除':\n                            that.scope.delfun(params);\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            };\n            //处理指令\n            return {\n                restrict: 'E',\n                replace: true,\n                transclude: false,\n                scope: {\n                    addfun: '&',\n                    editfun: '&',\n                    delfun: '&',\n                    selectfun: '&',\n                    datasource: '=source'\n                },\n                template: function (iElement, iAttrs) {\n                    return '<div id></div>';\n                },\n                link: function (scope, iElement, iAttrs) {\n                    var dataSource = scope.datasource,\n                        treeId = iAttrs.id;\n                    scope.$watch('datasource', function (newVal, oldVal, scope) {\n                        if (newVal !== undefined && newVal.length && newVal.length > 0) {\n                            dataSource = scope.datasource;\n                            var showField = iAttrs.showfield || 'name';\n                            //判断数据源是否被处理过，如果resource中只有一条数据，证明是处理过的，否则是没有处理的\n                            if (dataSource.length > 1) {\n                                var idField = iAttrs.idField || 'id',\n                                    foreignKey = iAttrs.foreignKey || 'parentid',\n                                    rootLevel = iAttrs.rootlevel || '0';\n                                dataSource = $.toKendoTreeData(dataSource, idField, foreignKey, rootLevel);\n                            }\n                            //渲染树\n                            $(\"#\" + treeId).kendoTreeView({\n                                dataSource: dataSource,\n                                loadOnDemand: false,\n                                dataTextField: showField\n                            });\n                            var treeView = $(\"#\" + treeId).data('kendoTreeView');\n                            treeView.expand('.k-item');\n                            //如果有data-selectfun，则在选择树节点时触发该方法\n                            if (iAttrs.selectfun) {\n                                treeView.bind(\"select\", function (e) {\n                                    scope.selectfun({\n                                        t: treeView,\n                                        n: treeView.dataItem(e.node)\n                                    });\n                                });\n                            }\n                            //如果配置了右键菜单，则显示\n                            if (iAttrs.menu !== undefined) {\n                                var menu = new ContextMunu(scope, iAttrs);\n                            }\n                        }\n                    });\n                }\n            };\n        }\n    ]);\n    /**\n     * pho:search\n     */\n    module.directive('phoSearch', ['PhoebeResource',\n        function (PhoebeResource) {\n            return {\n                restrict: 'A',\n                scope: {\n                    model: '@',\n                    showlist: '@',\n                    include: '='\n                },\n                link: function (scope, element, attrs) {\n                    var input = element.find(\"input[data-role='keywords']\");\n                    //保存searchKye关键字\n                    var searchKye = '';\n                    //点击搜索字段按钮所响应的动作\n                    var UL = $(\"ul[class='dropdown-menu']\");\n                    UL.on('click', function (event) {\n                        var el = angular.element(event.target),\n                            oneSearchKye = el.attr('data-key');\n                        //将所选字段项的汉字显示到按钮中\n                        angular.element(this).parent().find('.dropdown-toggle').html(el.html() + '<span class=\"caret\">');\n                        searchKye = oneSearchKye;\n                    });\n                    //点击搜索按钮时所响应的动作\n                    var searchSubmit = $(\"button[data-role='searchSubmit']\");\n                    searchSubmit.click(function () {\n                        var inputValue = input.val();\n                        //                var inputValue = '';\n                        //                var value = input.val();\n                        //                console.log(Object.prototype.toString.apply(value));\n                        //                var n = Number(value);\n                        //                if (!isNaN(n) && value != '')\n                        //                {\n                        //                    console.log(\"是数字\");\n                        //                    inputValue = Number(value);\n                        //                    console.log(Object.prototype.toString.apply(inputValue));\n                        //                }\n                        //                else{\n                        //                    inputValue = input.val();\n                        //                    console.log(\"不是数字\");\n                        //                }\n                        //整理查询条件\n                        var obj = {},\n                        //                    where = {},\n                            include = [],\n                            like = {};\n                        //                where[searchKye] = inputValue;\n                        like.field = searchKye;\n                        like.val = inputValue;\n                        include = scope.include;\n                        obj.like = like;\n                        obj.include = include;\n                        if (searchKye === '') {\n                            //进行模糊查询\n                            console.log(\"进行模糊查询\");\n                            return;\n                        } else {\n                            //进行精确查询\n                            new PhoebeResource('/' + scope.model).query(obj).success(function (data) {\n                                var listName = scope.showlist + 'DataSource';\n                                scope.$parent.$model[listName] = data;\n                            });\n                        }\n                    });\n                }\n            };\n        }\n    ]);\n    /**\n     * 适用于弹出窗展示、勾选、提交的表格\n     * 例如：向集群添加关联节点时，该弹出框内是节点列表，可在该列表做勾选操作，提交时使用所勾选数据的id来更新数据库\n     */\n    module.directive('phoTableSelect', [\n        function () {\n            return function (scope, element, attrs) {\n                /**\n                 * 向scope添加一个属性，属性的名字是attrs['tablename']的值\n                 * @type {{\n                 *      getSelected     获取表格中所数据的id组成的数组\n                 *  }}\n                 */\n                scope[attrs.tablename] = {\n                    init: function () {\n                        element.find('tr').removeClass('table-mini-tr-selected');\n                        angular.forEach(element.find('input[type=checkbox]'), function (c) {\n                            c.checked = false;\n                        });\n                    },\n                    getSelected: function () {\n                        var arr = [],\n                            els = element.find('input[type=hidden]');\n                        angular.forEach(els, function (el) {\n                            var $$el = $$(el);\n                            if ($$el.parent().find('input[type=checkbox]')[0].checked) {\n                                arr.push($$(el).val());\n                            }\n                        });\n                        return arr;\n                    }\n                };\n                //单选\n                element.delegate('tbody tr', 'click', function (e) {\n                    e.preventDefault();\n                    var $$this = $$(this);\n                    if ($$this.hasClass('table-mini-tr-selected')) {\n                        $$this.removeClass('table-mini-tr-selected').find('input[type=checkbox]')[0].checked = false;\n                    } else {\n                        $$this.addClass('table-mini-tr-selected').find('input[type=checkbox]')[0].checked = true;\n                    }\n                });\n                //全选\n                element.delegate('thead input[type=checkbox]', 'click', function (e) {\n                    var that = this,\n                        checked = that.checked,\n                        trs = $$(this).closest('table').find('tbody tr');\n                    if (checked) {\n                        angular.forEach(trs, function (tr) {\n                            $$(tr).addClass('table-mini-tr-selected').find('input[type=checkbox]')[0].checked = true;\n                        });\n                    } else {\n                        angular.forEach(trs, function (tr) {\n                            $$(tr).removeClass('table-mini-tr-selected').find('input[type=checkbox]')[0].checked = false;\n                        });\n                    }\n                });\n            };\n        }\n    ]);\n    module.directive('phoSelect', ['$parse',\n        function ($parse) {\n            return {\n                restrict: 'EAC',\n                // templateUrl: '../bower_components/phoebe/templates/pho.select.html',\n                template: function (iElement, iAttrs) {\n                    return '<select class=\"chosen-select\"></select>';\n                },\n                scope: {\n                    default: '@',\n                    valuefidle: '@',\n                    labelfidle: '@',\n                    model: '@',\n                    options: '=',\n                    changed: '&',\n                    returnObject: '='\n                },\n                link: function (scope, iElement, iAttrs) {\n                    // init val.\n                    var width = (iAttrs.hasOwnProperty('width')) ? iAttrs.width : '60%';\n                    var select = iElement.find('.chosen-select');\n                    // Construction the select.\n                    scope.$watch('options', function (vals) {\n                        if (vals) {\n                            var html = '<option value=\"\" selected>-- ' + scope.\n                                default + ' --</option>';\n                            angular.forEach(vals, function (option) {\n                                html += '<option value=\"' + option[scope.valuefidle] + '\">' + option[scope.labelfidle] + '</option>';\n                            });\n                            select.append(html);\n                            select.chosen().next().css({\n                                'width': width\n                            });\n                        }\n                    });\n                    // changed.\n                    select.on('change', function () {\n                        //\n                        if (scope.returnObject === true) {\n                            for (var i = 0; i < scope.options.length; i++) {\n                                if (scope.options[i][scope.valuefidle] === select.val()) {\n                                    scope.$parent[scope.model] = scope.options[i];\n                                }\n                            }\n                        } else {\n                            scope.$parent[scope.model] = select.val();\n                        }\n                        if (scope.changed) scope.changed();\n                        scope.$parent.$apply();\n                    });\n                }\n            };\n        }\n    ]);\n    /**\n     * 下拉框联动\n     */\n    module.directive('phoLinkage', function () {\n        return function (scope, element, attrs) {\n            var data = scope[attrs.ngModel],\n                selectors = element.find('select'),\n                selectors_arr = [];\n            angular.forEach(selectors, function (selector) {\n                selectors_arr.push(angular.element(selector).attr('id'));\n            });\n            var c = $.linkage(selectors_arr, data, '');\n        };\n    });\n    /**\n     * 分页控件\n     * pho-Pagination\n     * usage :\n     *      <pho-pagination></pho-pagination>\n     */\n    module.directive('phoPagination', function () {\n        return {\n            restrict: 'E',\n            template: '<ul class=\"pagination\">' + '<li class=\"prev\"  ng-class=\"prevPageDisabled()\"><a href=\"#\" ng-click=\"firstPage()\"><i class=\"fa fa-angle-double-left\"></i></a></li>' + '<li class=\"prev\"  ng-class=\"prevPageDisabled()\"><a href=\"#\" ng-click=\"prevPage()\"><i class=\"fa fa-angle-left\"></i></a></li>' + '<li ng-repeat=\"n in range()\" ng-class=\"{active: n == pagination.currentPage}\" ng-click=\"setPage(n)\"><a href=\"#\">{{n+1}}</a></li>' + '<li class=\"next\" ng-class=\"nextPageDisabled()\"><a href=\"#\" ng-click=\"nextPage()\"><i class=\"fa fa-angle-right\"></i></a></li>' + '<li class=\"next\" ng-class=\"nextPageDisabled()\"><a href=\"#\" ng-click=\"lastPage()\"><i class=\"fa fa-angle-double-right\"></i></a></li>' + '</ul>',\n            replace: true,\n            link: function (scope, element, attrs) {\n                //添加一个对表格数据长度的监听，当数据发生变化时，初始化分页控件\n                scope.$watch('items.length', function (newValue, oldValue, scope) {\n                    if (!scope.pagination) {\n                        if (!scope.items || !scope.items.length) {\n                            scope.items = [];\n                        }\n                        if (scope.items.length > 0) {\n                            scope.initPagination();\n                        }\n                    } else if (scope.items) {\n                        scope.pagination.items = scope.items;\n                    }\n                });\n                scope.initPagination = function () {\n                    scope.pagination = {\n                        itemsPerPage: 10,\n                        items: scope.items,\n                        itemCount: scope.items.length,\n                        currentPage: 0,\n                        active: 0\n                    };\n                    //选择每页显示条数以后刷新表格\n                    scope.reloadTable = function () {\n                        scope.pagination.currentPage = 0;\n                    };\n                    //获取数据条数\n                    scope.getItemCount = function () {\n                        return scope.pagination.items.length;\n                    };\n                    scope.getPageCount = function () {\n                        var o = scope.pagination;\n                        return Math.ceil(o.items.length / o.itemsPerPage) - 1;\n                    };\n                    scope.setItemsPerPage = function (n) {\n                        scope.pagination.itemsPerPage = n;\n                        scope.reloadTable();\n                    };\n                    //跳到第n页\n                    scope.setPage = function (n) {\n                        scope.pagination.currentPage = n;\n                    };\n                    //显示几个页的按钮\n                    scope.range = function () {\n                        var arr = [];\n                        var pageCount = scope.getPageCount();\n                        for (var i = 0; i < pageCount + 1; i++) {\n                            arr.push(i);\n                        }\n                        return arr;\n                    };\n                    scope.firstPage = function () {\n                        scope.pagination.currentPage = 0;\n                    };\n                    scope.lastPage = function () {\n                        scope.pagination.currentPage = scope.getPageCount();\n                    };\n                    scope.prevPage = function () {\n                        if (scope.pagination.currentPage > 0) {\n                            scope.pagination.currentPage--;\n                        }\n                    };\n                    scope.prevPageDisabled = function () {\n                        return scope.pagination.currentPage === 0 ? \"disabled\" : \"\";\n                    };\n                    scope.nextPage = function () {\n                        var o = scope.pagination;\n                        if (o.currentPage < scope.getPageCount()) {\n                            scope.pagination.currentPage++;\n                        }\n                    };\n                    scope.nextPageDisabled = function () {\n                        return scope.pagination.currentPage === scope.getPageCount() ? \"disabled\" : \"\";\n                    };\n                };\n            }\n        };\n    });\n    /**\n     * imgupload\n     */\n    module.directive('phoImg', [\n        function () {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: '<a href=\"javascript:void(0);\">' + '<input type=\"file\" style=\"width: 100%;height: 100%;position: absolute;top: 0;opacity: 0\"/>' + '<img src=\"\"/>' + '</a> ',\n                link: function (scope, element, attrs) {\n                    var limitSize = attrs.size;\n                    element.find('input').attr('ng-disabled', attrs['ng-disabled']).on('change', function (ev) {\n                        var target = ev.target;\n                        //上传文件尺寸判断\n                        if (limitSize) {\n                            var size = target.files[0].size;\n                            if (parseInt(limitSize, 10) * 1000000 < size) {\n                                $.tips(\"上传图片不能超过\" + limitSize + \"M,请重新选择图片！\", \"error\");\n                                return false;\n                            }\n                        }\n                        var reader = new FileReader();\n                        reader.onload = function (e) {\n                            element.find('img').attr('src', e.target.result);\n                        };\n                        reader.readAsDataURL(target.files[0]);\n                    });\n                }\n            };\n        }\n    ]);\n    /**\n     * 高度自适应容器\n     */\n    module.directive('phoContainer', ['$parse',\n        function ($parse) {\n            return {\n                restrict: 'EAC',\n                template: '<div></div>',\n                replace: true,\n                scope: {},\n                link: function (scope, iElement, iAttrs) {\n                    // Find the parent of the element.\n                    var parentElement = iElement.parent();\n                    // Cache\n                    var fullSize = {\n                        width: parentElement.outerWidth(),\n                        height: parentElement.outerHeight()\n                    };\n                    // Set the width.\n                    if (!iElement.width()) {\n                        if (iAttrs.width) iElement.width(valParser(iAttrs.width, fullSize.width));\n                        else iElement.width(fullSize.width);\n                    }\n                    // Set the height.\n                    if (iAttrs.height) iElement.height(valParser(iAttrs.height, fullSize.height));\n                    else iElement.height(fullSize.height);\n                    // The parser of value.\n                    function valParser(value, fullsize) {\n                        if (value) {\n                            var widthVal;\n                            if (value.indexOf('%') > -1) {\n                                widthVal = (value.substr(0, value.indexOf('%')) / 100) * fullsize;\n                            } else if (value.indexOf('px') > -1) {\n                                widthVal = value.substr(0, value.indexOf('px'));\n                            } else {\n                                widthVal = value;\n                            }\n                            return widthVal;\n                        } else {\n                            return 0;\n                        }\n                    }\n                }\n            };\n        }\n    ]);\n\n\n    /**\n     * 2015-04-07  (replace with \"pho-form-controls\")\n     * author ： wizaliu\n     * description : 表单控件指令。可使用的表单控件包含以下类型（“ ”中表示该类型可配置的属性和可添加的指令）：\n     *\n     *  1、输入框        ：text  “”\n     *  2、数字          ：number\n     *  3、网络地址      ：url\n     *  4、邮箱          : email\n     *  5、密码          : password\n     *  6、文本框        ：textarea  “”\n     *  7、日期选择框     ：datepicker  “data-date-format:格式化方式，默认为‘yyyy-mm-dd’；data-role；data-end；data-start”\n     *  8、下拉框        ：dropdwon  “data-options:like ng-options directive”\n     *\n     *  此外，每一种表单控件都可以配置以下属性：\n     *   1、data-type                : 控件类型\n     *   2、data-id                  ：id\n     *   3、data-name                ：name\n     *   4、data-model               : ng-model\n     *   5、data-options             ：下拉框选项（dropdown独有）\n     *   6、data-required            : 必填\n     *   7、data-disabled            : disabled\n     *     8、data-classes               : 要添加的额外央视\n     *     9、data-minlength             :最小长度\n     *     10、data-maxlength            :最大长度\n     *     11、data-change               :ng-change事件\n     *     12、data-keydown              :ng-keydown事件\n     *     13、data-keypress             :ng-keypress事件\n     *     14、data-keyup                :ng-keyup事件\n     *     15、data-style                ：单独设置的样式\n     *     16、data-placeholder             ：placeholder\n     */\n    module.directive('phoFc', ['PhoebeResource',\n        function (PhoebeResource) {\n\n            //根据配置属性构造属性字符串\n            function buildAttrbutes(attr) {\n                var _props = '';\n                for (var k in attr.$attr) {\n                    switch (k) {\n                        //type属性不用加到标签中\n                        case 'type':\n                            break;\n                        //name是控件的中文名，不用加到标签中\n                        case 'name':\n                            break;\n                        case 'id':\n                            _props += ' id=\"' + attr[k] + '\"';\n                            break;\n                        //将model设置为ng-model指令\n                        case 'model':\n                            _props += ' ng-model=\"' + attr[k] + '\"';\n                            break;\n                        case 'value':\n                            _props += ' value=\"'+attr[k]+'\"';\n                            break;\n                        case 'required':\n                            _props += ' required';\n                            break;\n                        case 'disabled':\n                            _props += ' disabled';\n                            break;\n                        case 'readonly':\n                            _props += ' readonly';\n                            break;\n                        case 'minlength':\n                            _props += ' ng-minlength=\"' + attr[k] + '\"';\n                            break;\n                        case 'maxlength':\n                            _props += ' ng-maxlength=\"' + attr[k] + '\"';\n                            break;\n                        case 'options':\n                            _props += ' ng-options=\"' + attr[k] + '\"';\n                            break;\n                        case 'style':\n                            _props += ' style=\"' + attr[k] + '\"';\n                            break;\n                        case 'change':\n                            _props += ' ng-change=\"' + attr[k] + '\"';\n                            break;\n                        case 'keydown':\n                            _props += ' ng-keydown=\"' + attr[k] + '\"';\n                            break;\n                        case 'keypress':\n                            _props += ' ng-keypress=\"' + attr[k] + '\"';\n                            break;\n                        case 'keyup':\n                            _props += ' ng-keyup=\"' + attr[k] + '\"';\n                            break;\n                        case 'placeholder':\n                            _props += ' placeholder=\"' + attr[k] + '\"';\n                            break;\n                        default:\n                            _props += ' ' + attr.$attr[k] + '=\"' + attr[k] + '\"';\n                            break;\n                    }\n                }\n                if (attr.classes) {\n                    _props += ' class=\"form-control ' + attr.classes + '\"';\n                } else {\n                    _props += ' class=\"form-control\"';\n                }\n\n                return _props;\n            }\n\n            //根据表单控件类型构造字符串\n            function buildWidget(attrs) {\n                var type = attrs.type,\n                    cols = attrs.cols ? attrs.cols : '12',\n                    name = attrs.name ? attrs.name + '：' : '',\n                    _html = '<div class=\"col-xs-' + cols + '\"><div class=\"form-group form-group-sm\"><label for=\"text\" class=\"control-label\">' + name +\n                        '</label><div class=\"form-content\">',\n                    _htmlInner = '';\n\n                switch (type) {\n                    case 'text' :\n                        _htmlInner += '<input type=\"text\" ' + buildAttrbutes(attrs) + '/>';\n                        break;\n                    case 'number' :\n                        _htmlInner += '<input type=\"number\" ' + buildAttrbutes(attrs) + '/>';\n                        break;\n                    case 'url' :\n                        _htmlInner += '<input type=\"url\" ' + buildAttrbutes(attrs) + '/>';\n                        break;\n                    case 'email' :\n                        _htmlInner += '<input type=\"email\" ' + buildAttrbutes(attrs) + '/>';\n                        break;\n                    case 'password' :\n                        _htmlInner += '<input type=\"password\" ' + buildAttrbutes(attrs) + '/>';\n                        break;\n                    case 'textarea' :\n                        _htmlInner += '<textarea rows=\"5\" ' + buildAttrbutes(attrs) + '></textarea>';\n                        break;\n                    case 'dropdown' :\n                        _htmlInner += '<select ' + buildAttrbutes(attrs) + '><option value=\"\">请选择</option></select>';\n                        break;\n                    case 'datepicker' :\n                        _htmlInner += '<div class=\"input-group\">' + '<input type=\"text\" pho-date' + buildAttrbutes(attrs) + ' readonly/>' + '<span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-th\"></i></span></div>';\n                        break;\n                    default :\n                        break;\n                }\n\n                //handle the \"data-th\" property\n                if (attrs.th && type !== 'datepicker'){\n                    var th = attrs.th,\n                        inner = '';\n                    if (th === 'date'){\n                        inner = '<i class=\"glyphicon glyphicon-th\"></i>';\n                    } else {\n                        inner = th;\n                    }\n                    _html += '<div class=\"input-group\">' + _htmlInner + '<span class=\"input-group-addon\">'+inner+'</span></div></div></div></div>';\n                } else {\n                    _html += _htmlInner + '</div></div></div>';\n                }\n\n                return _html;\n            }\n\n            return {\n                restrict: 'E',\n                template: function (tElement, tAttr) {\n                    return buildWidget(tAttr);\n                },\n                replace: true,\n                transclude: true,\n                link: function (scope, iElement, iAttrs) {\n                    //去掉文本框的尺寸限制\n                    if (iAttrs.type === 'textarea') {\n                        $(iElement).find('.form-group').removeClass('form-group-sm');\n                    }\n                }\n            };\n        }\n    ]);\n\n\n    /**\n     * 20150408 (replace with \"pho-datepicker\")\n     * author : wizaliu\n     * description : 日期选择框\n     * usage :\n     *\n     * 参数：data-role-->日期选择框类型：start（开始时间）、end（结束时间）、beforetoday（所选日期不能大于今天）\n     *      data-start-->与结束时间对应的开始时间的id\n     *      data-end-->与开始时间对应的结束时间的id\n     *      data-form-->制定时间选择框的选择范围，即只能选data-form规定之后的时间\n     *      data-to-->制定时间选择框的选择范围，即只能选data-form规定之前的时间\n     *      data-format-->日期选择框显示格式\n     *\n     */\n    module.directive('phoDate', [function () {\n        return {\n            restrict: 'EA',\n            transclude: false,\n            template: function (iElement, iAttrs) {\n                var attr = iAttrs.$attr;\n                if (attr.phoDate) {\n                    return '';\n                }\n\n                //如果使用原生指令，则需要整理配置项\n                var _props = '';\n                for (var k in attr) {\n                    switch (k) {\n                        case 'model':\n                            _props += ' ng-model=\"' + iAttrs[k] + '\"';\n                            break;\n                        case 'id':\n                            _props += ' id=\"' + iAttrs[k] + '\"';\n                            break;\n                        case 'required':\n                            _props += ' required';\n                            break;\n                        case 'disabled':\n                            _props += ' disabled';\n                            break;\n                        case 'change':\n                            _props += ' ng-change=\"' + iAttrs[k] + '\"';\n                            break;\n                        case 'style':\n                            _props += ' style=\"' + iAttrs[k] + '\"';\n                            break;\n                        case 'placeholder':\n                            _props += ' placeholder=\"' + iAttrs[k] + '\"';\n                            break;\n                    }\n                }\n\n                if (attr.classes) {\n                    _props += ' class=\"form-control ' + iAttrs.classes + '\"';\n                } else {\n                    _props += ' class=\"form-control\"';\n                }\n\n                return '<div class=\"input-group\"><input type=\"text\" '+_props+' readonly/><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-th\"></i></span></div>';\n\n                // return '<input type=\"text\" ' + _props + ' />';\n            },\n            link: function (scope, iElement, iAttrs) {\n                if (!iAttrs.$attr.phoDate) {\n                    iElement = $(iElement).find('input').eq(0);\n                }\n\n                //构建配置项\n                var config = {},\n                    role = iAttrs.role;\n\n                //结束时间\n                if (iAttrs.to) {\n                    config.endDate = iAttrs.to;\n                }\n                //开始时间\n                if (iAttrs.form) {\n                    config.startDate = iAttrs.form;\n                }\n                \n                //there are two kinds of \"datepicker\", if you need to select \"hour\" and \"minute\", we use the second one\n                if (iAttrs.format && iAttrs.format.indexOf('hh') > 0){\n                    //格式化类型\n                    config.format = iAttrs.format;\n                    config.autoclose = true;\n                    $(iElement).datetimepicker(config);\n                } else {\n                    //格式化类型\n                    if (iAttrs.format) {\n                        config.type = iAttrs.format;\n                    }\n                    if (role && role === 'beforetoday') {\n                        var date = new Date(),\n                            year = date.getFullYear(),\n                            month = date.getMonth() + 1,\n                            day = date.getDate(),\n                            today = year + '-' + month + '-' + day;\n\n                        config.endDate = today;\n                    }\n                    $(iElement).cxCalendar(config);\n                } \n\n                /**\n                 * 开始时间或结束时间\n                 */\n                if (role === 'start' || role === 'end') {\n                    var startEl, endEl;\n\n                    if (role === 'start') {\n                        startEl = iElement;\n                        endEl = $('#' + iAttrs.end);\n                    } else {\n                        startEl = $('#' + iAttrs.start);\n                        endEl = iElement;\n                    }\n                    iElement.on('change', function () {\n                        try {\n                            var start = new Date(startEl.val() || 0).getTime(),\n                                end = new Date(endEl.val() || 0).getTime();\n\n                            if (start && end) {\n                                if (end < start) {\n//                                    console.log('error!');\n                                    $.tips(\"结束日期不能小于起始日期！\", \"error\");\n                                    $(this).val(\"\");\n                                }\n                            }\n                        } catch (e) {\n                            console.log(e);\n                        }\n                    });\n                }\n                //判断所选日期不能大于今天\n                if (role == 'beforetoday') {\n                    iElement.on('changeDate', function () {\n                        var selected = $(this).val().replace(/-/g, \"\"),\n                            newDate = new Date(),\n                            ny = newDate.getFullYear(),\n                            nm = (newDate.getMonth() + 1) < 10 ? '0' + (newDate.getMonth() + 1) : (newDate.getMonth() + 1),\n                            nd = newDate.getDate() < 10 ? '0' + newDate.getDate() : newDate.getDate(),\n                            today = ny + \"\" + nm + \"\" + nd;\n                        if (today < selected) {\n                            $.tips(\"所选日期不能大于今天！\", \"error\");\n                            $(this).val(\"\");\n                        }\n                    });\n                }\n            }\n        };\n    }]);\n\n})();\n\n\n/**\n * ======================================================================================================\n *\n * 2015-04-10\n * 项目中使用的Jquery扩展，这些扩展用directive实现更繁琐，所以用Jquery进行扩展，方便调用。\n * 主要包括两种类型：\n * 1、交互类：提示框、console开关\n * 2、数据处理类 ： 数组去重、格式转换、对象继承...\n *\n * ======================================================================================================\n */\n$.extend({\n    /**\n     * 2015-04-10\n     * author : wizaliu\n     * description : 提示框\n     * @param content\n     * @param style\n     */\n    tips: function (content, style) {\n        style = (style === undefined ? \"success\" : style);\n        style = style === 'error' ? 'danger' : style;\n\n        $('#tip_alert').remove();\n        var styleSheet = 'position:fixed;top:150px;left:50%;z-index:9999;border-radius:3px;opacity:0.6;width:230px;margin-left:-100px;text-align:center;';\n        var _html = '<div id=\"tip_alert\" class=\"alert alert-' + style + '\" style=\"' + styleSheet + '\">' + content + '</div>';\n        $('body').append($(_html));\n        var $el = $('#tip_alert');\n        $el.animate({\n            opacity: 1\n        }, 200, function () {\n            $el.animate({\n                opacity: 1\n            }, 1000, function () {\n                $el.animate({\n                    opacity: 0.2\n                }, 1500, function () {\n                    $el.remove();\n                });\n            });\n        });\n    }\n});\n\n","","/**\n * Created by felix on 11/13/14.\n */\n(function(window, angular, undefined){\n    'use strict';\n\n    angular.module('phoebe.library.chosen', []);\n\n\n})(window, window.angular);","/**\n * dirPagination - AngularJS module for paginating (almost) anything.\n *\n *\n * Credits\n * =======\n *\n * Daniel Tabuenca: https://groups.google.com/d/msg/angular/an9QpzqIYiM/r8v-3W1X5vcJ\n * for the idea on how to dynamically invoke the ng-repeat directive.\n *\n * I borrowed a couple of lines and a few attribute names from the AngularUI Bootstrap project:\n * https://github.com/angular-ui/bootstrap/blob/master/src/pagination/pagination.js\n *\n * Copyright 2014 Michael Bromley <michael@michaelbromley.co.uk>\n */\n(function() {\n    /**\n     * Config\n     */\n    var moduleName = 'phoebe.library.pagination';\n    var DEFAULT_ID = '__default';\n    /**\n     * Module\n     */\n    var module;\n    try {\n        module = angular.module(moduleName);\n    } catch (err) {\n        // named module does not exist, so create one\n        module = angular.module(moduleName, []);\n    }\n    module.directive('dirPaginate', ['$compile', '$parse', 'paginationService',\n        function($compile, $parse, paginationService) {\n            return {\n                terminal: true,\n                multiElement: true,\n                priority: 5000, // This setting is used in conjunction with the later call to $compile() to prevent infinite recursion of compilation\n                compile: function dirPaginationCompileFn(tElement, tAttrs) {\n                    var expression = tAttrs.dirPaginate;\n                    // regex taken directly from https://github.com/angular/angular.js/blob/master/src/ng/directive/ngRepeat.js#L211\n                    var match = expression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n                    var filterPattern = /\\|\\s*itemsPerPage\\s*:[^|]*/;\n                    if (match[2].match(filterPattern) === null) {\n                        throw 'pagination directive: the \\'itemsPerPage\\' filter must be set.';\n                    }\n                    var itemsPerPageFilterRemoved = match[2].replace(filterPattern, '');\n                    var collectionGetter = $parse(itemsPerPageFilterRemoved);\n                    // If any value is specified for paginationId, we register the un-evaluated expression at this stage for the benefit of any\n                    // dir-pagination-controls directives that may be looking for this ID.\n                    var rawId = tAttrs.paginationId || DEFAULT_ID;\n                    paginationService.registerInstance(rawId);\n                    return function dirPaginationLinkFn(scope, element, attrs) {\n                        // Now that we have access to the `scope` we can interpolate any expression given in the paginationId attribute and\n                        // potentially register a new ID if it evaluates to a different value than the rawId.\n                        var paginationId = $parse(attrs.paginationId)(scope) || attrs.paginationId || DEFAULT_ID;\n                        paginationService.registerInstance(paginationId);\n                        var repeatExpression;\n                        var idDefinedInFilter = !!expression.match(/(\\|\\s*itemsPerPage\\s*:[^|]*:[^|]*)/);\n                        if (paginationId !== DEFAULT_ID && !idDefinedInFilter) {\n                            repeatExpression = expression.replace(/(\\|\\s*itemsPerPage\\s*:[^|]*)/, \"$1 : '\" + paginationId + \"'\");\n                        } else {\n                            repeatExpression = expression;\n                        }\n                        // Add ng-repeat to the dom element\n                        if (element[0].hasAttribute('dir-paginate-start') || element[0].hasAttribute('data-dir-paginate-start')) {\n                            // using multiElement mode (dir-paginate-start, dir-paginate-end)\n                            attrs.$set('ngRepeatStart', repeatExpression);\n                            element.eq(element.length - 1).attr('ng-repeat-end', true);\n                        } else {\n                            attrs.$set('ngRepeat', repeatExpression);\n                        }\n                        var compiled = $compile(element, false, 5000); // we manually compile the element again, as we have now added ng-repeat. Priority less than 5000 prevents infinite recursion of compiling dirPaginate\n                        var currentPageGetter;\n                        if (attrs.currentPage) {\n                            currentPageGetter = $parse(attrs.currentPage);\n                        } else {\n                            // if the current-page attribute was not set, we'll make our own\n                            var defaultCurrentPage = paginationId + '__currentPage';\n                            scope[defaultCurrentPage] = 1;\n                            currentPageGetter = $parse(defaultCurrentPage);\n                        }\n                        paginationService.setCurrentPageParser(paginationId, currentPageGetter, scope);\n                        if (typeof attrs.totalItems !== 'undefined') {\n                            paginationService.setAsyncModeTrue(paginationId);\n                            scope.$watch(function() {\n                                return $parse(attrs.totalItems)(scope);\n                            }, function(result) {\n                                if (0 <= result) {\n                                    paginationService.setCollectionLength(paginationId, result);\n                                }\n                            });\n                        } else {\n                            scope.$watchCollection(function() {\n                                return collectionGetter(scope);\n                            }, function(collection) {\n                                if (collection) {\n                                    paginationService.setCollectionLength(paginationId, collection.length);\n                                }\n                            });\n                        }\n                        // Delegate to the link function returned by the new compilation of the ng-repeat\n                        compiled(scope);\n                    };\n                }\n            };\n        }\n    ]);\n    module.directive('dirPaginationControls', ['paginationService', 'paginationTemplate',\n        function(paginationService, paginationTemplate) {\n            var numberRegex = /^\\d+$/;\n            /**\n             * Generate an array of page numbers (or the '...' string) which is used in an ng-repeat to generate the\n             * links used in pagination\n             *\n             * @param currentPage\n             * @param rowsPerPage\n             * @param paginationRange\n             * @param collectionLength\n             * @returns {Array}\n             */\n            function generatePagesArray(currentPage, collectionLength, rowsPerPage, paginationRange) {\n                    var pages = [];\n                    var totalPages = Math.ceil(collectionLength / rowsPerPage);\n                    var halfWay = Math.ceil(paginationRange / 2);\n                    var position;\n                    if (currentPage <= halfWay) {\n                        position = 'start';\n                    } else if (totalPages - halfWay < currentPage) {\n                        position = 'end';\n                    } else {\n                        position = 'middle';\n                    }\n                    var ellipsesNeeded = paginationRange < totalPages;\n                    var i = 1;\n                    while (i <= totalPages && i <= paginationRange) {\n                        var pageNumber = calculatePageNumber(i, currentPage, paginationRange, totalPages);\n                        var openingEllipsesNeeded = (i === 2 && (position === 'middle' || position === 'end'));\n                        var closingEllipsesNeeded = (i === paginationRange - 1 && (position === 'middle' || position === 'start'));\n                        if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\n                            pages.push('...');\n                        } else {\n                            pages.push(pageNumber);\n                        }\n                        i++;\n                    }\n                    return pages;\n                }\n                /**\n                 * Given the position in the sequence of pagination links [i], figure out what page number corresponds to that position.\n                 *\n                 * @param i\n                 * @param currentPage\n                 * @param paginationRange\n                 * @param totalPages\n                 * @returns {*}\n                 */\n            function calculatePageNumber(i, currentPage, paginationRange, totalPages) {\n                var halfWay = Math.ceil(paginationRange / 2);\n                if (i === paginationRange) {\n                    return totalPages;\n                } else if (i === 1) {\n                    return i;\n                } else if (paginationRange < totalPages) {\n                    if (totalPages - halfWay < currentPage) {\n                        return totalPages - paginationRange + i;\n                    } else if (halfWay < currentPage) {\n                        return currentPage - halfWay + i;\n                    } else {\n                        return i;\n                    }\n                } else {\n                    return i;\n                }\n            }\n            return {\n                restrict: 'AE',\n                /*templateUrl: function(elem, attrs) {\n                    return attrs.templateUrl || paginationTemplate.getPath();\n                },*/\n                template: function(elem, attrs) {\n                    var str = '<ul class=\"pagination\" ng-if=\"1 < pages.length\">' + \n                    '<li ng-if=\"boundaryLinks\" ng-class=\"{ disabled : pagination.current == 1 }\">' + \n                    '<a href=\"\" ng-click=\"setCurrent(1)\">&laquo;</a></li>' + \n                    '<li ng-if=\"directionLinks\" ng-class=\"{ disabled : pagination.current == 1 }\">' + \n                    '<a href=\"\" ng-click=\"setCurrent(pagination.current - 1)\">&lsaquo;</a></li>' + \n                    '<li ng-repeat=\"pageNumber in pages track by $index\" ng-class=\"{ active : pagination.current == pageNumber, disabled : pageNumber == ';\n                    str += \"'...'\";\n                    str += '}\">' + '<a href=\"\" ng-click=\"setCurrent(pageNumber)\">{{ pageNumber }}</a></li>' + \n                    '<li ng-if=\"directionLinks\" ng-class=\"{ disabled : pagination.current == pagination.last }\">' + \n                    '<a href=\"\" ng-click=\"setCurrent(pagination.current + 1)\">&rsaquo;</a></li>' + \n                    '<li ng-if=\"boundaryLinks\"  ng-class=\"{ disabled : pagination.current == pagination.last }\">' + \n                    '<a href=\"\" ng-click=\"setCurrent(pagination.last)\">&raquo;</a></li></ul>';\n                    return str;\n                },\n                scope: {\n                    maxSize: '=?',\n                    onpagechange: '&?',\n                    paginationId: '=?',\n                    module: '@'\n                },\n                link: function dirPaginationControlsLinkFn(scope, element, attrs) {\n                    // rawId is the un-interpolated value of the pagination-id attribute. This is only important when the corresponding dir-paginate directive has\n                    // not yet been linked (e.g. if it is inside an ng-if block), and in that case it prevents this controls directive from assuming that there is\n                    // no corresponding dir-paginate directive and wrongly throwing an exception.\n                    var rawId = attrs.paginationId || DEFAULT_ID;\n                    var paginationId = scope.paginationId || attrs.paginationId || DEFAULT_ID;\n                    if (!paginationService.isRegistered(paginationId) && !paginationService.isRegistered(rawId)) {\n                        var idMessage = (paginationId !== DEFAULT_ID) ? ' (id: ' + paginationId + ') ' : ' ';\n                        throw 'pagination directive: the pagination controls' + idMessage + 'cannot be used without the corresponding pagination directive.';\n                    }\n                    if (!scope.maxSize) {\n                        scope.maxSize = 9;\n                    }\n                    scope.directionLinks = angular.isDefined(attrs.directionLinks) ? scope.$parent.$eval(attrs.directionLinks) : true;\n                    scope.boundaryLinks = angular.isDefined(attrs.boundaryLinks) ? scope.$parent.$eval(attrs.boundaryLinks) : false;\n                    var paginationRange = Math.max(scope.maxSize, 5);\n                    scope.pages = [];\n                    scope.pagination = {\n                        last: 1,\n                        current: 1\n                    };\n                    scope.range = {\n                        lower: 1,\n                        upper: 1,\n                        total: 1\n                    };\n                    scope.$watch(function() {\n                        return (paginationService.getCollectionLength(paginationId) + 1) * paginationService.getItemsPerPage(paginationId);\n                    }, function(length) {\n                        if (0 < length) {\n                            generatePagination();\n                        }\n                    });\n                    scope.$watch(function() {\n                        return (paginationService.getItemsPerPage(paginationId));\n                    }, function(current, previous) {\n                        if (current != previous) {\n                            goToPage(scope.pagination.current);\n                        }\n                    });\n                    scope.$watch(function() {\n                        return paginationService.getCurrentPage(paginationId);\n                    }, function(currentPage, previousPage) {\n                        if (currentPage != previousPage) {\n                            goToPage(currentPage);\n                        }\n                    });\n                    scope.setCurrent = function(num) {\n                        if (isValidPageNumber(num)) {\n                            paginationService.setCurrentPage(paginationId, num);\n                        }\n                    };\n\n                    function goToPage(num) {\n                        if (isValidPageNumber(num)) {\n                            scope.pages = generatePagesArray(num, paginationService.getCollectionLength(paginationId), paginationService.getItemsPerPage(paginationId), paginationRange);\n                            scope.pagination.current = num;\n                            updateRangeValues();\n                            // if a callback has been set, then call it with the page number as an argument\n                            if (scope.module) {\n                                var moduleName = scope.module;\n                                try{\n                                    scope.$parent.$resoure[moduleName + 'QueryData'].call(this, {\n                                        pagination: {\n                                            page: num,\n                                            rows: paginationService.getItemsPerPage(paginationId)\n                                        }\n                                    });\n                                } catch(e){\n                                    console.log(e);\n                                }\n                                \n                            } else if (scope.onpagechange) {\n                                scope.onpagechange({\n                                    page: num,\n                                    rows: paginationService.getItemsPerPage(paginationId)\n                                });\n                            }\n                        }\n                    }\n\n                    function generatePagination() {\n                            var page = parseInt(paginationService.getCurrentPage(paginationId)) || 1;\n                            scope.pages = generatePagesArray(page, paginationService.getCollectionLength(paginationId), paginationService.getItemsPerPage(paginationId), paginationRange);\n                            scope.pagination.current = page;\n                            scope.pagination.last = scope.pages[scope.pages.length - 1];\n                            if (scope.pagination.last < scope.pagination.current) {\n                                scope.setCurrent(scope.pagination.last);\n                            } else {\n                                updateRangeValues();\n                            }\n                        }\n                        /**\n                         * This function updates the values (lower, upper, total) of the `scope.range` object, which can be used in the pagination\n                         * template to display the current page range, e.g. \"showing 21 - 40 of 144 results\";\n                         */\n                    function updateRangeValues() {\n                        var currentPage = paginationService.getCurrentPage(paginationId),\n                            itemsPerPage = paginationService.getItemsPerPage(paginationId),\n                            totalItems = paginationService.getCollectionLength(paginationId);\n                        scope.range.lower = (currentPage - 1) * itemsPerPage + 1;\n                        scope.range.upper = Math.min(currentPage * itemsPerPage, totalItems);\n                        scope.range.total = totalItems;\n                    }\n\n                    function isValidPageNumber(num) {\n                        return (numberRegex.test(num) && (0 < num && num <= scope.pagination.last));\n                    }\n                }\n            };\n        }\n    ]);\n    module.filter('itemsPerPage', ['paginationService',\n        function(paginationService) {\n            return function(collection, itemsPerPage, paginationId) {\n                if (typeof(paginationId) === 'undefined') {\n                    paginationId = DEFAULT_ID;\n                }\n                if (!paginationService.isRegistered(paginationId)) {\n                    throw 'pagination directive: the itemsPerPage id argument (id: ' + paginationId + ') does not match a registered pagination-id.';\n                }\n                var end;\n                var start;\n                if (collection instanceof Array) {\n                    itemsPerPage = parseInt(itemsPerPage) || 9999999999;\n                    if (paginationService.isAsyncMode(paginationId)) {\n                        start = 0;\n                    } else {\n                        start = (paginationService.getCurrentPage(paginationId) - 1) * itemsPerPage;\n                    }\n                    end = start + itemsPerPage;\n                    paginationService.setItemsPerPage(paginationId, itemsPerPage);\n                    return collection.slice(start, end);\n                } else {\n                    return collection;\n                }\n            };\n        }\n    ]);\n    module.service('paginationService', function() {\n        var instances = {};\n        var lastRegisteredInstance;\n        this.registerInstance = function(instanceId) {\n            if (typeof instances[instanceId] === 'undefined') {\n                instances[instanceId] = {\n                    asyncMode: false\n                };\n                lastRegisteredInstance = instanceId;\n            }\n        };\n        this.isRegistered = function(instanceId) {\n            return (typeof instances[instanceId] !== 'undefined');\n        };\n        this.getLastInstanceId = function() {\n            return lastRegisteredInstance;\n        };\n        this.setCurrentPageParser = function(instanceId, val, scope) {\n            instances[instanceId].currentPageParser = val;\n            instances[instanceId].context = scope;\n        };\n        this.setCurrentPage = function(instanceId, val) {\n            instances[instanceId].currentPageParser.assign(instances[instanceId].context, val);\n        };\n        this.getCurrentPage = function(instanceId) {\n            var parser = instances[instanceId].currentPageParser;\n            return parser ? parser(instances[instanceId].context) : 1;\n        };\n        this.setItemsPerPage = function(instanceId, val) {\n            instances[instanceId].itemsPerPage = val;\n        };\n        this.getItemsPerPage = function(instanceId) {\n            return instances[instanceId].itemsPerPage || 10;\n        };\n        this.setCollectionLength = function(instanceId, val) {\n            instances[instanceId].collectionLength = val;\n        };\n        this.getCollectionLength = function(instanceId) {\n            return instances[instanceId].collectionLength;\n        };\n        this.setAsyncModeTrue = function(instanceId) {\n            instances[instanceId].asyncMode = true;\n        };\n        this.isAsyncMode = function(instanceId) {\n            return instances[instanceId].asyncMode;\n        };\n    });\n    module.provider('paginationTemplate', function() {\n        var templatePath = './templates/phoebe.lib.pagination.tpl.html';\n        this.setPath = function(path) {\n            templatePath = path;\n        };\n        this.$get = function() {\n            return {\n                getPath: function() {\n                    return templatePath;\n                }\n            };\n        };\n    });\n})();"],"sourceRoot":"../src/library"}